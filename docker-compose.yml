name: logging-framework
services:
  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: logging-framework-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - logging-framework-network

  kibana:
    image: kibana:8.8.0
    container_name: logging-framework-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - logging-framework-network

  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: logging-framework-zookeeper
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - logging-framework-network

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: logging-framework-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - logging-framework-network

      
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: logging-framework-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8087:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: logging-framework
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - logging-framework-network

networks:
  logging-framework-network:
    driver: bridge

volumes:
  kafka_data: {}
  elasticsearch-data : {}